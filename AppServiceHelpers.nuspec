<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
   <metadata minClientVersion="2.8.1">
       <id>AppService.Helpers</id>
       <version>1.1.0-pre-release</version>
       <title>App Service Helpers</title>
       <authors>Mike James and Pierce Boggan</authors>
       <owners>Mike James</owners>
       <licenseUrl>https://github.com/MikeCodesDotNet/App-Service-Helpers</licenseUrl>
       <projectUrl>https://github.com/MikeCodesDotNet/App-Service-Helpers</projectUrl>
       <requireLicenseAcceptance>false</requireLicenseAcceptance>
       <description>
        App Service Helpers makes enables you to bring the power of the cloud to your mobile apps. In just four lines of code, App Service Helpers automatically handles backend data access, online/offline synchronization, and even sync conflicts automatically. \n \n For developers building mobile applications with Xamarin.Forms, download the App Service Helpers for Xamarin.Forms to use our preconfigured ViewModel - all you need to do is subclass our view model and data bind away! \n \n For more information and to report feedback, visit us on GitHub at https://github.com/mikecodesdotnet/app-service-helpers
       </description>
       <summary>App Service Helpers makes enables you to bring the power of the cloud to your mobile apps.</summary>
       <tags>xamarin, ios, android, azure, app service, connected, mbaas, tables, database, sync</tags>
       <dependencies>
          <group targetFramework=".NETFramework4.5">
            <dependency id="Microsoft.Azure.Mobile.Client.SQLiteStore" version="2.1.0" />
          </group>
       </dependencies>
    <releaseNotes>
      [1.1.1]
      -NEW: One line authentication for Facebook, Twitter, Google, MSA, and Azure AD. We even secure store authentication tokens and manage token refresh scenarios automatically for you.
      -NEW: Handle conflicts that occur between your local data store and the server with our ConflictResolutionStrategy. Control on a per-table basis by setting the ConflictResolutionStrategy
        property on the table, or subscribe to the delegate method to handle conflicts on a per-occurrence basis.

      [1.1.0]
      -Added ConnectedObservableCollection.
    </releaseNotes>
   </metadata>
   <files>
     <!-- Core -->
     <file src="AppServiceHelpers.Mobile/bin/Release/AppServiceHelpers.dll" target="lib\portable-net45+wp8+wpa81+win8+MonoAndroid10+MonoTouch10+Xamarin.iOS10+UAP10\AppServiceHelpers.dll" />
     
     <!-- Android -->
     <file src="AppServiceHelpers.Ext.Android/bin/Release/AppServiceHelpers.Ext.dll"
        target="lib\MonoAndroid10\AppServiceHelpers.Ext.dll" />
     
   <!-- iOS -->
   <file src="AppServiceHelpers.Ext.iOS/bin/Release/AppServiceHelpers.Ext.dll"
        target="lib\Xamarin.iOS10\AppServiceHelpers.Ext.dll" />
     
   <file src="AppServiceHelpers.Ext.iOS/bin/Release/AppServiceHelpers.Ext.dll"
        target="lib\MonoTouch10\AppServiceHelpers.Ext.dll" />
  
   <!-- UWP -->
   <file src="AppServiceHelpers.Ext.UWP/bin/x86/Release/AppServiceHelpers.Ext.dll"
        target="lib\UAP10\AppServiceHelpers.Ext.dll" />
   
   <!-- Windows RT-->
   <file src="AppServiceHelpers.Ext.Windows/bin/x86/Release/AppServiceHelpers.Ext.dll"
        target="lib\win8\AppServiceHelpers.Ext.dll" />
   
   <file src="AppServiceHelpers.Ext.Windows/bin/x86/Release/AppServiceHelpers.Ext.dll"
        target="lib\wp8\AppServiceHelpers.Ext.dll" />
     
   <file src="AppServiceHelpers.Ext.Windows/bin/x86/Release/AppServiceHelpers.Ext.dll"
        target="lib\wpa81\AppServiceHelpers.Ext.dll" />
   </files>
 </files>
</package>